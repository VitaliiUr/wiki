#!/usr/bin/env python3
import wikipedia as wiki
import re
import sys
import argparse


def get_random_title():
    """ Find a random article on the Wikipadia
    and suggests it to user.

    Returns
    -------
    str
        title of article
    """
    title = wiki.random()
    print("Random article's title:")
    print(title)

    ans = input(
        "Do you want to read it?\n (Press any key if yes or \"n\" if you want to see next suggestion)\n\
            Press \"q\" to quit")

    if ans in ("n", "next"):
        return get_random_title()
    elif ans == "q":
        print("sorry for that")
        sys.exit(0)
    else:
        return title


def search_title(search):
    """ Looks for the article by title

    Parameters
    ----------
    search : str
        query for the search

    Returns
    -------
    str
        title of the article
    """

    titles = wiki.search(search)
    print(">>> We found such articles:\n")
    print(*[f"\"{t}\","for t in titles[:5]], "\n")

    for title in titles:
        print(">>> Did you mean \"{}\"?\n Press any key if yes or \"n\"".format(title),
              "if you want to see next suggestion")
        ans = input("Press \"q\" to quit")
        if ans in ("n", "next"):
            continue
        elif ans == "q":
            print(">>> Sorry for that. Bye")
            sys.exit(0)
        else:
            return title


def split_paragraphs(text):

    # Remove bad symbols
    text = re.sub(r"\s{2,}", " ", text.strip())
    text = re.sub(r"\n{2,}", "\n", text)

    # Split article to the paragraphs
    pat = re.compile(
        r"(?:(?:\s?)(?:={2,})(?:\s*?)(?:[^=]+)(?:\s*?)(?:={2,}))")
    paragraphs = pat.split(text)

    # Get titles of the paragraphs
    pat2 = re.compile(
        r"(?:(?:\s?)(?:={2,})(?:\s?)([^=]+)(?:\s?)(?:={2,}))")
    titles = list(map(lambda x: x.strip(), ["Summary"] + pat2.findall(text)))

    # Create a dictionary of the paragraphs and return it
    result = dict(zip(titles, paragraphs))
    if "References" in result:
        del result["References"]
    return result


if __name__ == "__main__":

    # Get arguments
    parser = argparse.ArgumentParser()
    parser.add_argument("search", type=str, nargs='?',
                        help="search wiki article by title")
    args = parser.parse_args()

    if args.search:
        name = search_title(args.search)  # search article by title
    else:
        name = get_random_title()  # get random article

    if name:
        print(">>> Article is loading. Please, wait...")
        page = wiki.page(name)
    else:
        print(">>> Please, try again")
        sys.exit(0)

    paragraphs = split_paragraphs(page.content)

    print("\n===== ", name, " =====")
    for title in paragraphs:
        print("\n")
        print("=== ", title, " ===")
        print(paragraphs[title])
        ans = input(
            "Press any key to proceed, \"q\" to quit")
        if ans == "q":
            sys.exit(0)
